{
  "extends": "eslint:recommended",
  "env": {
    "browser": true,
    "es6": true
  },
  "rules": {
    "indent": "off",
    "no-mixed-spaces-and-tabs": "off",
    "max-len": [
      "error",
      {
	"tabWidth": 8,
	"ignoreStrings": true,
	"ignoreTemplateLiterals": true,
	"ignorePattern": "TODO|FIXME"
      }
    ],
    "no-var": "error",
    "no-unused-vars": ["error", { "vars": "local", "args": "none" }],
    "linebreak-style": ["error", "unix"],
    "semi": ["error", "always"],
    "func-call-spacing": "error",
    "space-before-function-paren": [
      "error",
      {
	"anonymous": "never",
	"named": "never",
	"asyncArrow": "always"
      }
    ],
    "keyword-spacing": [
      "error",
      { "before": true, "after": true }
    ],
    "no-confusing-arrow": "error",
    "arrow-body-style": ["error", "as-needed"]
    // rules I *almost* like :(
    //"arrow-parens": ["error", "as-needed"], // conflicts with no-confusing-arrow
    //"prefer-template": "error", // breaks when I use the ''+ idiom to ensure stringhood
    //"brace-style": ["error", "1tbs"], // this breaks when I break long conditions in an if across multiple lines
    //"curly": ["error", "multi-or-nest", "consistent"], // this breaks when I omit braces for a for containing only a braceless if
  },
  "globals": {
    "initTrees": "readonly",
    "updateSubtree": "readonly",
    "ValueParser": "readonly",
    "base64js": "readonly",
    "RecorderNode": "readonly"
  }
}
